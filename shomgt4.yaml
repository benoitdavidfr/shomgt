title: conception de ShomGt4
abstract: |
  Nouvelle version de ShomGT dont les principes sont
  - gestion collaborative de ShomGT
    - notamment permettre à plusieurs personnes d'effectuer les mises à jour de manière concurrente
      - -> mettre à jour des cartes entièrement en mode web sans nécessiter de gérer une copie locale comme en V3
    - permettre à un nouvel utilisateur de s'ouvrir lui-même un compte sous réserve de son domaine mail
    - gestion d'un forum entre utilisateurs ou liste d'échange
    - avoir qqs admins pour réguler le fonctionnement
      - annuler les livraisons dégradant le service
      - banir les utilisateurs indélicats
      - gérer la liste des domaines mails autorisés
      - gérer la liste des adresses IP autorisées
  - mettre en oeuvre une stratégie de conservation limitée des données pour éviter la saturation du stockage
    - utilisation d'un compte dédié d'Alwaysdata avec 20 Go de stockage
  - migration vers des environnements (Alwaysdata et github) indépendants de moi
  - automatisation de certaines tâches régulières
    - mettre en oeuvre par cron d'un script sunday.php tous les dimanche vers 4h
    - mettre en oeuvre la stratégie de conservation des données
      - notamment suppression des versions de cartes remplacées depuis longtemps
    - mettre à jour le GAN
  - mise en base des infos stockées en V3 dans des fichiers Yaml et mises à jour concurremment en V4
  - évols plus limitées
    - amélioration de la gestion des cartes spéciales, notamment
      - permettre la mise à jour des cartes spéciales par le client
    - meilleure gestion en production de l'affichage des erreurs
    - restructuration des archives de cartes
      - suppression de la notion de livraison qui n'est plus pertinente
      - conservation de l'utilisateur ayant déposé la carte
    - gestion du bug Shom de mauvais géoréférencement de la carte 7620-2242, voir '#bug7620'
méthodeDeDécoupageEnComposants:
  - chaque composant est soit de type Web, soit de type CLI, soit de type stockage
  - un composant Web expose une interface web mais n'autorise que de courtes exécutions (de l'ordre de 30 s)
  - à l'inverse un composant CLI permet des traitements longs mais ne peut pas exposer d'interface Web
  - un composant stockage est passif, il stocke des données structurées d'une certaine manière
  - si un composant nécessite de longues exécutions une exposition web, il doit être découpé en 2
    avec si nécessaire un partage de données dans un disque partagé
  - ajouter les fonctions transverses
  - ajouter le stockage en base PgSql
découpageEnComposantsV4:
  shomgt:
    objet: expose les 2 services WMS, ainsi que les flux Tile et GeoJSON et une carte Leaflet utilisant ces 2 derniers flux
    mode: Web
    offreA:
      extérieur: 2 services WMS, flux Tile et GeoJSON, et code JavaScript de visualisation
    utiliseDe:
      sgupdt: les données construites par sgupdt et stockées dans data
    note:
      - dockerisable
      - fichiers geojson à actualiser régulièrement
        - delmar.geojson, copié de shomft
        - frzee.geojson, copié de shomft
        - sar_2019.geojson, copié de diffusion.shom.fr
  data:
    objet: répertoire ou volume partagé contenant les données pour shomgt
    mode: stockage
    note: éventuellement volume partagé docker
  sgupdt:
    objet: construit ou met à jour à partir de sgserver les données data nécessaires à shomgt
    mode: CLI
    offreA:
      shomgt: les données construites pour shomgt dans data
    utiliseDe:
      sgserver: les données exposées par sgserver
    note: dockerisable
  sgserver:
    objet: expose la dernière version de chaque carte, le libellé de cette version, les cartes retirées, et mapcat
    mode: Web
    offreA:
      sgupt: la dernière version de chaque carte, le libellé de cette version, les cartes retirées, et mapcat
    utiliseDe:
      portfolio:
        - les dernières versions stockées sous forme d'archives 7z et les md.json avec comme contraintes
          - les cartes 7z sont stockées dans le sous-répertoire current du portefeuille
          - à chaque carte 7z est associé un fichier .md.json contenant en JSON
            la propriété 'version' indiquant la version de la carte.
          - les cartes retirées correspondent à un fichier {num}.md.json contenant en JSON
            la propriété 'status' contenant la valeur 'obsolete'
      mapcat: le catalogue mapcat.yaml
  mapcat:
    objet: gère le catalogue de cartes, diffusé par sgserver et utilisé par sgupdt
    offreATous: le contenu du catalogue comme fichier Yaml
    utiliseDe:
      gan: la dernière version de la synthèse des GANs pour comparaison au contenu du catalogue et corrections éventuelles
    note: géré par des comparaisons avec le GAN et des mises à jour dans l'éditeur de texte
  portfolio:
    objet: stocke les versions des cartes du portefeuille ainsi qu'un éventuel statut de retrait d'une carte
    mode: stockage
    offreA:
      sgserver: les dernières versions des cartes associée au libellé de la version, ainsi que la liste des cartes retirées
      dashboard: les dernières versions des cartes associée au libellé de la version ainsi que la date de mise à jour
    miseAJourPar:
      bo: dépose de nlles versions de cartes, marque une carte comme retirée, fabrique les md.json
    structure: voir '#/structurePortfolio'
  shomft:
    objet: |
      expose
        - les sihouettes des cartes normales et spéciales, provenant du serveur WFS du Shom
        - les délimitations maritimes provenant du serveur WFS du Shom
        - les contours simplifiés de la ZEE édités avec QGis
    mode: mixte
    offreA:
      dashboard: les silhouettes des cartes et les contours simplifiés de la ZEE
    utiliseDe:
      shomWfs: le serveur WFS du Shom
  dashboard:
    objet: |
      - expose un tableau de bord permettant d'identifier dans le portefeuille
        - les cartes les plus périmées à remplacer
        - les cartes obsolètes à marquer comme telle
        - les nouvelles cartes à ajouter au portefeuille
    mode: Web
    offreA:
      cmdeShom: cartes à commander
      bo: cartes à marquer obsolètes
    utiliseDe:
      mapcat: le catalogue des cartes avec les infos stables
      portfolio:
        label: la liste des cartes 7z du portefeuille avec leur version et leur date de modification
        donnéesUtilisées:
          - fichiers md.json des cartes non obsolètes
          - champ status pour vérifier que la carte n'est pas obsolète
          - champ 'version'
          - champ 'revision' ou si non défini champ 'creation' (PAS COMPATIBLE !!!!!!!!!!!!!!!!!!!!!!!!!!!!)
      shomft: les silhouettes des cartes et les contours simplifiés de la ZEE
  gan:
    objet: moissonne le site GAN du Shom et stocke le résultat pour l'exposer
    mode: CLI
    offreA:
      dashboard: infos GAN restructurées par carte conformément au schema gans.schema.yaml
      mapcat: infos GAN restructurées par carte conformément au schema gans.schema.yaml
    utiliseDe:
      gan.shom.fr: le site GAN du Shom
  bo:
    objet: mettre à jour le portefeuille et mapcat
    mode: Web
    metAJour:
      portfolio:
        - dépôt d'une nouvelle version de carte,
        - modification du lien de current vers archives
        - marque une carte comme obsolète,
        - fabrique les md.json
      mapcat: modification de l'entrée du catalogue pour une carte
    utiliseDe:
      cmdeShom: cartes obtenues du Shom
      dashboard: numéros des cartes à marquer comme obsolètes
  cmdeShom:
    objet: commande manuelle des cartes au Shom à partir des infos du dashboard
    offreA:
      bo: dépôt des cartes obtenues
    utiliseDe:
      dashboard: liste des cartes à actualiser et des nlles cartes
      bureau.prestations@shom.fr: commande par mail à <bureau.prestations@shom.fr>
      diffusion.shom.fr: téléchargement sur le site
interfacesImportantesEntreComposants:
  portfolio:
phasage:
  stratégie:
    - ajouter progressivement les nouvelles fonctionnalités
    - garder pour le moment shomgt sur le compte bdavid
  organisation:
    - synchroniser shomgt -> sgpp au moyen d'un lien symbolique sgpp -> shomgt en local
  sprint1:
    objectfs:
      - réorganisation de shomgeotiff
      - évolution de la structure des md.json
        - mise à jour des md.json existants / ok
      - mise en place de la préprod avec ces évolutions
      - mise en place d'une 1ère version du BO avec le dépôt d'une nouvelle carte
      - adaptation de sgserver si nécessaire
      - adaptation de dashboard (champs creation/revision remplacés par le chap date) / ok
      - correction bug 7620
    apportsFonctionnels:
      - dépôt des cartes en mode web
      - correction bug 7620
  sprint2:
    objectifs:
      - création de comptes
      - bannissement utilisateur
      - gestion noms de domaines et IP
      - mise en base user, domaines et adresses IP
    apportsFonctionnels:
      - création de comptes
  sprint3:
    - automatisation de la maj du GAN et de la purge des cartes
  sprint4:
    - annulation dépôt de cartes
  sprint5:
    - meilleure gestion en production de l'affichage des erreurs
  sprint6:
    - ajout gestion du catalogue dans le BO
    - mise en base de MapCat
bug7620:
  - la carte 7620-2242 présente un bug de géoréférencement
  - en exécutant gdalinfo sur 7620_pal300.tif on constate que
    - le champ coordinateSystem.wkt est bizarre
    - le champ cornerCoordinates censé donner les coordonnées des coins en WorldMercator est faux
  - pour traiter ce bug, j'ai choisi de modifier le fichier lib/gdalinfo.inc.php
    - de ne plus utiliser cornerCoordinates
    - mais de recalculer la projection WorldMercator de wgs84Extent
  - l'inconvénient de cette solution est de modifier le composant shomgt
  - l'avantage est que je n'ai pas besoin de construire un contournement de ce bug
  - l'incovénient est faible car l'ancien composant shomgt fonctionnera toujours
    - la seule limite est que la carte buggée ne s'affiche pas
forum:
  phpbb: https://www.phpbb.com/about/
  sympa:
    avantages:
      - plus simple à mettre en oeuvre qu'un forum
      - gérable depuis l'extérieur de l'intranet
      - affichage de la responsabilité du ministère (nom de domaine)
alwaysdata:
  - créer un compte shomgt (ou geoapi) indépendant de bdavid que je puisse céder à quelqu'un
  - avec gestion du nom de domaine geoapi
  - la version de prod -> https://geoapi.fr/shomgt -> ~/www/shomgt
    - ou https://shomgt.alwaysdata.net/
  - avec une version préprod -> https://geoapi.fr/shomgtpp -> ~/www/shomgtpp
  - stockage de shomgeotiff dans ~/shomgeotiff
github:
  - créer une branch shomgt4 (FAIT)
    - je ne sais pas la copier sur github
  - créer un compte organization shomgt dans lequel je crée un dépôt shomgt4
batchRégulierDEntretien:
  - batch chaque Dimanche à 4h
  - mise à jour du GAN
  - mise en oeuvre de la stratégie de conservation des cartes et des logs
  - suppression des dépôts en attente non validés
preprod:
  - mettre en oeuvre une préprod
  - https://sgpp.geoapi.fr/
    - avec des  var. d'env. différentes
  - mettre en oeuvre un filtre sur sgserver pour faire des tests
    - var. d'env. avec la liste des cartes exposées uniquement actif sur pprod
    - ou un shomgeotiff spécifique
      
conservation:
  title: stratégie de conservation des données
  cartes:
    principes:
      - je garde pour chaque carte ttes les versions qui datent de moins d'un an
      - ainsi que la version la plus récente qui date de plus d'un an
      - et je jette donc les autres versions qui datent de plus d'un an
      - cela permet pendant un an d'annuler le dépôt d'une nouvelle version dégradant le service
    réf:
      - shomgeotiff complet pèse environ 9 Go
      - je peux en supprimer un peu moins de la moitié en appliquant les principes ci-dessus
      - je peux probablement me satisfaire de 10 Go pour le stockage des cartes
    commentFaire:
      - dans le script sunday.php
      - voir script bo/purge.php
  logsDeConnexion:
    - faire des synthèses des logs ttes les semaines
    - les logs détaillés pèsent environ 140 Mo pour 6 mois
    - supprimer les logs détaillés au bout d'un an
structurePortfolio:
  title: organisation du portefeuille dans shomgeotiff
  chemin: le chemin de shomgeotiff est défini dans la var. d'env. SHOMGT3_INCOMING_PATH
  subDirectories:
    - le répertoire contient au moins les 3 sous-répertoires suivants
    - archives
      - avec un répertoire par carte, nommé par le num. de la carte
      - dans ce répertoire de carte
        - 2 fichiers .7z et .md.json par version de la carte
          - en utilisant un nom de base de la forme {mapNum}-{version}
          - où {version} est la version sous la forme YYYYcN qd il existe un fichier .xml
            - sinon le nom du fichier tif ou pdf
          - il vaut mieux utiliser la version qu'une date car pour les anciennes cartes je n'ai pas de bonne date
            alors que la version est mieux définie
        - éventuellement un fichier {mapnum}-{date}.md.json indiquant l'obsolescence de la carte
          - où {date} est la date de parution du retrait de la carte
          - ou si cette date n'est pas connue la date de fourniture de l'info
    - current
      - pour chaque carte non obsolète 2 liens vers la dernière version de la carte dans archives nommés respectivement
        - {mapnum}.7z pour le contenu de la carte
        - {mapnum}.md.json pour les métadonnées associées
      - pour chaque carte obsolète un lien nommé {mapnum}.md.json
        - vers le fichier {mapnum}-{GanWeek}.md.json indiquant l'obsolescence de la carte
    - users
      - un répertoire par utilisateur nommé avec son adresse email
      - contenant les cartes en cours de dépôt
  structureFichiersMdJson: définie par le schema bo/md.schema.yaml

cartesSpéciales:
  - le portefeuille comporte quelques cartes spéciales ne respectant pas les specs des cartes normales
    - chacune est identifiée dans MapCat par le champ layer qui identifie la couche à laquelle elle est affectée
  - si l'archive 7z comporte un seul .tif ou pas de .tif et un seul .pdf
    - alors je considère que ce fichier constitue l'image principale de la carte
    - sinon s'il existe un champ geotiffnames dans MapCat et si un des geotiffnames correspond à une entrée dans l'archive 7z
      - alors je considère que ce fichier constitue l'image principale de la carte
      - sinon ERREUR
  - pour les MD
    - si l'archive comprend un et un seul fichier XML
      - alors je considère que c'est le fichier de MD
      - sinon je construis des MD simplifiées dans lesquelles la version est le nom du fichier .tif ou .pdf
        - en effet je constate que le nom du tif/pdf change à chaque version de la carte
        - c'est donc un bon moyen de gérer la version des cartes spéciales sans fichier MD ISO
  
miseEnBase:
  description: mise en base de certaines informations pour la V4
  user:
    description: compte utilisateur créé par vérification de l'adresse email
    attributs:
      num:
        type: int
        description: numéro d'ordre du compte auto incrémenté
        clé: primaire
      login:
        type: string
        description: adresse email
        clé: secondaire unique
      epasswd:
        type: string
        description: mot de passe encrypté
      role:
        type: string
        description: rôle de l'utilisateur
        enum:
          admin: administrateur ayant notamment le droit de changer les rôles des utilisateurs
          normal: utilisateur normal ayant le droit d'ajouter et supprimer des cartes
          restricted: utilisateur ayant le droit de consulter les cartes mais pas d'en ajouter ou d'en supprimer
          banned: utilisateur banni ayant aucun droit, et qui ne peut réactiver son compte
          suspended: utilisateur suspendu, l'utilisateur n'a plus aucun droit jusqu'à ce qu'il réactive son compte
          temp: utilisateur en cours de création dont la validité n'a pas été vérifiée
      secret:
        type: string
        description: clé secrète envoyée par email pour vérifier l'adresse email
      sent:
        type: date+time
        description: date et heure d'envoi du dernier mail de vérification
      create:
        type: date+time
        description: date et heure de création du compte ou de son dernier renouvellement
  mapcat:
    description: |
      catalogue des cartes obsolètes ou non avec un n-uplet par carte
      IL FAUT ARCHIVER LES ANCIENNES VERSIONS POUR POUVOIR LES RESTAURER
    attributs:
      mapnum:
        type: string
        description: numéro de carte sur 4 chiffres
      title:
        type: string
        description: titre de la carte sans le numéro en tête
      delete:
        type: date ou null
        description: date de suppression pour les cartes obsolètes ou null si la carte n'est pas obsolète
      interest:
        type: string
        description: 'N' pour les cartes d'intérêt insuffisant, 'Y' pour les autres cartes
      content:
        type: JSON
        description: enregistrement conforme au schéma JSON
      bbox:
        type: polygon
        description: boite engobante de la carte
  trace(PAS_NECESSAIRE):
    description: |
      traces des ajouts et suppressions de cartes et de l'annulation éventuelle de l'action
      L'action peut être
       - ajout d'une nouvelle carte
       - remplacement d'une carte par une nouvelle version
       - suppression d'une carte obsolète
    attributs:
      mapnum:
        description: numéro de la carte ajoutée, remplacée ou supprimée
      version:
        description: version de la carte ajoutée, null pour une carte supprimée
      user:
        description: utilisateur ayant réalisé l'action
      action:
        description: type d'action
        enum:
          add: ajout d'une nouvelle carte
          replacement: remplacement d'une carte par une nouvelle version
          delete: suppression d'une carte obsolète
      dt:
        description: date et heure de l'action
      canceldt:
        description: date et heure de l'annulation ou null si l'action n'a pas été annulée
      canceluser:
        description: admin ayant annulé l'action ou null si l'action n'a pas été annulée
      path:
        description: chemin vers l'archive 7z de la version remplacée ou de la carte supprimée, null pour une nouvelle carte
  maildomain(PAS_NECESSAIRE):
    description: liste des domaines mails autorisés pour les utilisateurs, gérée par un admin
  ipaddress(PAS_NECESSAIRE):
    description: liste des adresses IPv4 et préfixes IPv6 autorisés, gérée par un admin
  gan(PAS_NECESSAIRE):
    description: stockage des infos du GAN mises à jour régulièrement par cron
admin:
  title: interface admin
  fonctionnalités:
    - gestion de
      - la liste des domaines autorisés
      - la liste des adresses IP autorisées
    - annulation du dépôt d'une carte, restitution de la version précédente
    - modification du rôle d'un utilisateur
bo:
  title: créer un BO pour les utilisateurs authentifiés
  fonctionnalités:
    - se loguer / créer un compte
    - déposer une carte, la vérifier,
    - marquer une carte comme obsolète,
    - modifier le catalogue
    - intégrer une carte déposée dans le portefeuille (cad dans le serveur de cartes)
    - mettre à jour les services ShomGt avec les nouvelles versions de cartes
  gestionDeComptes:
    - initialement un compte admin est créé avec une adresse email et un mot de passe
    - pour créer un nouveau compte
      - un utilisateur indique son adresse et son mot de passe
      - un enregistrement est créé dans la table user avec le rôle 'temp' et un secret généré aléatoirement
      - un mail lui est envoyé avec le secret intégré dans un lien
      - l'utilisateur doit activer le lien envoyé ce qui valide son compte et le fait passer en rôle 'normal'
    - si un utilisateur perd son mot de passe
      - il donne son adresse
      - un nouveau secret aléatoire est généré
      - un mail lui est envoyé avec le secret intégré dans un lien
      - le lien permet de saisir un nouveau mot de passe interactivement
    - un compte créé/renouvellé depuis plus d'un an doit être renouvellé
      - l'idée est d'interdire l'accès aux personnes dont l'adresse mail n'est plus valide
      - un nouveau secret aléatoire est généré
      - un mail est envoyé avec un lien demandant de renouveller le compte
      - si le compte n'est pas renouvellé dans un délai de 8 jours alors le compte est suspendu (rôle 'suspended')
      - un compte suspendu depuis plus de 6 mois est supprimé
      - pour réactiver un compte suspendu, c'est le même process que pour créer un compte
        - mais sans demander un nouveau mot de passe
  dépôt/vérifDUnecarte:
    - l'utilisateur authentifié demande à déposer une nouvelle archive de carte
    - l'archive est stockée dans un répertoire uniquement accessible à l'utilisateur
    - l'utilisateur voit la liste de ses cartes en attente
    - il peut vérifier une carte
  modifCatalogue:
    - il peut modifier le catalogue (ce qui peut être nécessaire pour valider une carte)
  intégrerAuPortfeuille:
    - si la vérif est ok
      - alors il peut intégrer la carte au portefeuille
      - sinon il peut effacer l'archive déposée
    - les cartes en attente non intégrées dans le portefeuille sont effacées par le script d'entretien
    - une fois intégrée au portefeuille les cartes n'"appartiennent" plus à l'utilisateur mais au système
      - il ne peut plus y toucher
  déclarerCarteObsolète:
    - il peut déclarer qu'une carte est obsolète
  mettreAJourServicesShomGt:
    - il peut mettre à jour les services ShomGt avec les nouvelles versions de cartes

crsWkt:
  title: CRS-WKT
  abstract: |
    Sur Alwaysdata, gdalinfo est en version 'GDAL 2.4.0, released 2018/12/14'
    Sur php82, gdalinfo est en version 'GDAL 3.6.2, released 2023/01/02'
  
    Le WKT du CRS en version 3.6.2 (2023/01/02) respecte le standard OGC 2.0.6 (document OGC 18-010r7 et ISO 19162:2019).
    Ce standard est dit WKT 2 (2019).
    Le WKT du CRS en version 2.4.0 (2018/12/14) respecte le standard OGC 1.0   (document OGC 12-063r5 et ISO 19162:2015).
    Ce standard est dit WKT.
  
  exampleOgc1.0: |
    PROJCS["WGS 84 / World Mercator",
      GEOGCS["WGS 84",
        DATUM["WGS_1984",
          SPHEROID["WGS 84",6378137,298.257223563, AUTHORITY["EPSG","7030"]],
          AUTHORITY["EPSG","6326"]],
        PRIMEM["Greenwich",0],
        UNIT["degree",0.0174532925199433],
        AUTHORITY["EPSG","4326"]],
      PROJECTION["Mercator_1SP"],
      PARAMETER["central_meridian",0],
      PARAMETER["scale_factor",1],
      PARAMETER["false_easting",0],
      PARAMETER["false_northing",0],
      UNIT["metre",1, AUTHORITY["EPSG","9001"]],
      AUTHORITY["EPSG","3395"]
    ]  
  
  exampleOgc2.0.6:
    worldMercator: |
      PROJCRS["WGS 84 / World Mercator",
        BASEGEOGCRS["WGS 84",
          DATUM["World Geodetic System 1984", ELLIPSOID["WGS 84",6378137,298.257223563, LENGTHUNIT["metre",1]]],
          PRIMEM["Greenwich",0, ANGLEUNIT["degree",0.0174532925199433]],
          ID["EPSG",4326]],
        CONVERSION["Mercator (variant A)",
          METHOD["Mercator (variant A)", ID["EPSG",9804]],
          PARAMETER["Latitude of natural origin",0, ANGLEUNIT["degree",0.0174532925199433], ID["EPSG",8801]],
          PARAMETER["Longitude of natural origin",0, ANGLEUNIT["degree",0.0174532925199433], ID["EPSG",8802]],
          PARAMETER["Scale factor at natural origin",1, SCALEUNIT["unity",1], ID["EPSG",8805]],
          PARAMETER["False easting",0, LENGTHUNIT["metre",1], ID["EPSG",8806]],
          PARAMETER["False northing",0, LENGTHUNIT["metre",1], ID["EPSG",8807]]],
        CS[Cartesian,2],
        AXIS["easting",east, ORDER[1], LENGTHUNIT["metre",1]],
        AXIS["northing",north, ORDER[2], LENGTHUNIT["metre",1]],
        ID["EPSG",3395]
      ]
    lambert93: |
      PROJCRS["RGF93 v1 / Lambert-93",
        BASEGEOGCRS["RGF93 v1",
          DATUM["Reseau Geodesique Francais 1993 v1", ELLIPSOID["GRS 1980",6378137,298.257222101, LENGTHUNIT["metre",1]]],
          PRIMEM["Greenwich",0, ANGLEUNIT["degree",0.0174532925199433]],
          ID["EPSG",4171]],
        CONVERSION["Lambert-93",
          METHOD["Lambert Conic Conformal (2SP)", ID["EPSG",9802]],
          PARAMETER["Latitude of false origin",46.5,ANGLEUNIT["degree",0.0174532925199433],ID["EPSG",8821]],
          PARAMETER["Longitude of false origin",3,ANGLEUNIT["degree",0.0174532925199433],ID["EPSG",8822]],
          PARAMETER["Latitude of 1st standard parallel",49,ANGLEUNIT["degree",0.0174532925199433],ID["EPSG",8823]],
          PARAMETER["Latitude of 2nd standard parallel",44,ANGLEUNIT["degree",0.0174532925199433],ID["EPSG",8824]],
          PARAMETER["Easting at false origin",700000,LENGTHUNIT["metre",1],ID["EPSG",8826]],
          PARAMETER["Northing at false origin",6600000,LENGTHUNIT["metre",1],ID["EPSG",8827]]
        ],
        CS[Cartesian,2],
        AXIS["easting (X)",east,ORDER[1],LENGTHUNIT["metre",1]],
        AXIS["northing (Y)",north,ORDER[2],LENGTHUNIT["metre",1]],
        USAGE[
          SCOPE["Engineering survey, topographic mapping."],
          AREA["France - onshore and offshore, mainland and Corsica (France métropolitaine including Corsica)."],
          BBOX[41.15,-9.86,51.56,10.38]
        ],
        ID["EPSG",2154]
      ]
    lambert93enYaml:
      PROJCRS:
        - "RGF93 v1 / Lambert-93"
        -
          BASEGEOGCRS:
            - "RGF93 v1"
            - DATUM:
                - Reseau Geodesique Francais 1993 v1
                - ELLIPSOID: ["GRS 1980", 6378137, 298.257222101, {LENGTHUNIT: [metre, 1]}]
            - PRIMEM: [Greenwich, 0, {ANGLEUNIT: ["degree", 0.0174532925199433]}]
            - ID: [EPSG, 4171]
        - 
          CONVERSION:
            - "Lambert-93"
            - METHOD:
              - Lambert Conic Conformal (2SP)
              - ID: [EPSG, 9802]
            - PARAMETER:
              - "Latitude of false origin"
              - 46.5
              - ANGLEUNIT: [degree, 0.0174532925199433]
              - ID: ["EPSG", 8821]
            - PARAMETER:
              - "Longitude of false origin"
              - 3
              - ANGLEUNIT: [degree, 0.0174532925199433]
              - ID: ["EPSG", 8822]
            - PARAMETER:
              - "Latitude of 1st standard parallel"
              - 49
              - ANGLEUNIT: [degree, 0.0174532925199433]
              - ID: ["EPSG", 8823]
            - PARAMETER:
              - "Latitude of 2nd standard parallel"
              - 44
              - ANGLEUNIT: [degree, 0.0174532925199433]
              - ID: ["EPSG", 8824]
            - PARAMETER:
              - "Easting at false origin"
              - 700000
              - LENGTHUNIT: ["metre", 1]
              - ID: ["EPSG", 8826]],
            - PARAMETER:
              - "Northing at false origin"
              - 6600000
              - LENGTHUNIT: ["metre", 1]
              - ID: ["EPSG", 8827]
        - CS: [Cartesian, 2]
        - AXIS: ["easting (X)", east, {ORDER: 1}, {LENGTHUNIT: ["metre",1]}]
        - AXIS: ["northing (Y)", north, {ORDER: 2}, {LENGTHUNIT: ["metre",1]}],
        -
           USAGE:
            SCOPE: "Engineering survey, topographic mapping."
            AREA: "France - onshore and offshore, mainland and Corsica (France métropolitaine including Corsica)."
            BBOX: [41.15,-9.86,51.56,10.38]
        - ID: ["EPSG", 2154]
  eof:
arbreEnYaml:
  description: |
    Un noeud est représenté par un objet atant une structure qqc et un champ particulier contenant les feuilles (leafs ici)
    Une feuille est ici représentée par une chaine de caractères mais pourrait aussi être représentée par une structure
    quelconque n'ayant pas de feuille.
    Tout dépend de l'info que l'on veut stocker dans le noeud et la feuille.
  arbre:
    - label: étiquette du noeud 1
      leafs:
        - feuille 1.1
        - feuille 1.2
    - label: étiquette d'un second noeud
      leafs:
        - feuille 2.1
    - feuille 3

bugsDétectésDansLesCartes:
  title: bugs détectés dans les cartes à l'occasion du test de conformié des cartes
  note: |
    - le nombre de cartouches peut varier au fur et à mesure des versions
    - dans d'autres cas l'absence de cartouche semble plutôt correspondre à un oubli du Shom
    - la gestion des cartes obsolètes n'est pas aussi rigoureuse que celle des cartes vivantes
  cartesEnErreur:
    FR5978:
      - dans la version 5978-1903 pas de bijection entre les cartouches définis dans l'archive et ceux définis dans MapCat
      - version 5978-1938 ok
    FR7003:
      - un cartouche a été rajouté dans l'édition de 2019 (7003-1938)
      - les versions antérieures génèrent donc une erreur
    FR7052:
      - Dans la version 7052-2249 le cartouche est manquant alors qu'il est présent dans la version 7052-1726
    FR7205: Dans la version 7205-2215 pas de bijection entre les cartouches définis dans l'archive et ceux définis dans MapCat
    FR7656: Carte obsolète dont l'extension spatiale n'a pas été conservée dans MapCat
    FR7665: 
      - dans le version 7665-1722, pas de bijection entre les cartouches définis dans l''archive et ceux définis dans MapCat
      - dans les autres Ok

  cartesInexistantesDansLeCatalogueYComprisDansLesObsolètes:
    0982:
      title: 0982 - Abords Sud de Terre-Neuve - Ile Saint-Pierre - Port de Saint-Pierre - Ile Miquelon - Port de Miquelon
      remplacéePar: 7638, 7639 et 7640
    5438:
      title: 5438 - Océan Pacifique
      note: carte à très petite échelle, assez moche, pas utile
    6725:
      title: 6725 - Estuaire de la Tamise - Partie Sud
      note: Fac-similé de la carte GB 1607, n'intersecte pas la France
    6774:
      title: 6774 - Puerto de Bilbao
      note: fac-similé de la carte ES 3941, n'intersecte pas la France
    6851:
      title: 6851 - Ports d'Ajaccio et de Propriano
      note: remplacée par FR7436
    6856:
      title: 6856 - Abords et Port de Bastia
      note: remplacée par FR7436
    7019:
      title: 7019 - De Imperia à Portofino
      note: fac-similé de la carte IT 2, n'intersecte pas la France
    7037:
      title: 7037 - De Dover à North Foreland
      note: fac-similé de la carte Carte GB n°1828, n'intersecte pas la France
    7046:
      title: 7046 - Puerto de Barcelona
      note: fac-similé de la carte ES 4891, n'intersecte pas la France
    7047:
      title: 7047 - Puerto de Tarragona
      note: fac-similé de la carte ES 4871, n'intersecte pas la France
    7181:
      title: 7181 - De Harwich à North Foreland (Estuaire de la Tamise)
      note: fac-similé de la carte GB 1183, n'intersecte pas la France
    7182:
      title: 7182 - Approches de l'Estuaire de la Tamise
      note: fac-similé de la carte GB 1610, 1:150_000, intersecte la France mais inutile
    7189:
      title: 7189 - Golfes d'Olbia et d'Aranci - Iles Tavolara et Molara
      note: fac-similé de la carte IT 322 et IT 318, Sicile, n'intersecte pas la France
    7190:
      title: 7190 - Golfe de Congianus - De Capo Ferro à Capo Figari
      note: fac-similé de la carte IT 323, Sicile, n'intersecte pas la France
    7191:
      title: 7191 - Archipel de la Maddalena
      note: fac-similé de la carte IT 324, Sicile, n'intersecte pas la France
    7212:
      title: 7212 - De Cabo Finisterre à Casablanca (Dâr el Beïda)
      note: fac-similé de la carte Carte PT n° 21101, n'intersecte pas la France
    7239:
      title: 7239 - Port de Santander
      note: fac-similé de la carte ES 4011, n'intersecte pas la France
    7656:
      title: 7656 - De Santona à Gijon
      note: n'intersecte pas la France et retirée du catalogue du Shom (est dans le catalogue mais sans extension)
    7623:
      title: 7623 - Approches Nord-Ouest de Saint Lucia
      note: fac-similé de la carte GB 197, n'intersecte pas la France
eof:
